// Test Korean thread generation
require('dotenv').config({ path: '.env.local' });
const axios = require('axios');

async function testKoreanThread() {
  console.log('üá∞üá∑ Testing Korean thread generation...\n');
  
  // Sample Korean transcript
  const koreanTranscript = "AIÎ•º ÌôúÏö©Ìïú Î∞îÏù¥Î∏å ÏΩîÎî©Ïù¥ Í∞úÎ∞úÏûêÏùò ÎØ∏ÎûòÎ•º Î∞îÍæ∏Í≥† ÏûàÏäµÎãàÎã§. ÏΩîÎìúÎßå ÏûëÏÑ±ÌïòÎäî Í∞úÎ∞úÏûêÍ∞Ä ÏïÑÎãå, Î¨∏Ï†úÎ•º Ìï¥Í≤∞ÌïòÎäî Í∞úÎ∞úÏûêÍ∞Ä ÎêòÏñ¥Ïïº Ìï©ÎãàÎã§. V0, Ïª§ÏÑú AI Í∞ôÏùÄ ÎèÑÍµ¨Îì§ÏùÑ ÌôúÏö©ÌïòÎ©¥ Í∞úÎ∞ú ÏÜçÎèÑÍ∞Ä ÌöçÍ∏∞Ï†ÅÏúºÎ°ú Ìñ•ÏÉÅÎê©ÎãàÎã§.";
  
  try {
    console.log('üì§ Sending request to generate thread...');
    
    const response = await axios.post('http://localhost:3000/api/generate-thread', {
      transcript: koreanTranscript,
      videoTitle: 'Î∞îÏù¥Î∏å ÏΩîÎî© ÎßàÏä§ÌÑ∞ÌïòÍ∏∞',
      videoDescription: 'AI ÏãúÎåÄÏùò Í∞úÎ∞úÏûê ÏÉùÏ°¥ Ï†ÑÎûµ'
    });
    
    console.log('\n‚úÖ Thread generated successfully!');
    console.log('\nüìù Summary:', response.data.summary);
    console.log('\nüßµ Threads:');
    response.data.threads.forEach((thread, index) => {
      console.log(`\n${index + 1}. ${thread.content}`);
      console.log(`   Characters: ${thread.content.length}`);
    });
    
  } catch (error) {
    console.error('\n‚ùå Error:', error.response?.data || error.message);
  }
}

testKoreanThread();