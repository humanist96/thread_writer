// Google Sheets Ï†ÄÏû• ÌÖåÏä§Ìä∏
const axios = require('axios');

async function testGoogleSheetsSave() {
  try {
    console.log('Testing Google Sheets save functionality...\n');
    
    const testData = {
      videoId: 'test_' + Date.now(),
      videoTitle: 'ÌÖåÏä§Ìä∏ ÎπÑÎîîÏò§ - Google Sheets Ï†ÄÏû• ÌÖåÏä§Ìä∏',
      channelTitle: 'ÌÖåÏä§Ìä∏ Ï±ÑÎÑê',
      summary: 'Ïù¥Í≤ÉÏùÄ Google Sheets Ï†ÄÏû• Í∏∞Îä•ÏùÑ ÌÖåÏä§Ìä∏ÌïòÍ∏∞ ÏúÑÌïú ÏöîÏïΩÏûÖÎãàÎã§.',
      threads: [
        'Ï≤´ Î≤àÏß∏ Ïä§Î†àÎìú ÎÇ¥Ïö©ÏûÖÎãàÎã§.',
        'Îëê Î≤àÏß∏ Ïä§Î†àÎìú ÎÇ¥Ïö©ÏûÖÎãàÎã§.',
        'ÏÑ∏ Î≤àÏß∏ Ïä§Î†àÎìú ÎÇ¥Ïö©ÏûÖÎãàÎã§.'
      ],
      createdAt: new Date().toISOString()
    };
    
    console.log('Sending test data to API...');
    
    const response = await axios.post('http://localhost:3010/api/sheets/save', testData);
    
    console.log('\n‚úÖ Response received:');
    console.log('Method:', response.data.method);
    console.log('Message:', response.data.message);
    
    if (response.data.method === 'manual_copy_required') {
      console.log('\nüìã Manual copy required!');
      console.log('Google Sheets URL:', response.data.result.googleSheetsUrl);
      console.log('\nData to copy (tab-separated):');
      const clip = response.data.clipboardData;
      console.log([
        clip.timestamp,
        clip.videoId,
        clip.videoTitle,
        clip.channelTitle,
        clip.summary,
        clip.threadContent,
        new Date().toISOString(),
        clip.characterCount
      ].join('\t'));
    }
    
    console.log('\nFull response:', JSON.stringify(response.data, null, 2));
    
  } catch (error) {
    console.error('‚ùå Test failed:', error.response?.data || error.message);
  }
}

// ÏÑúÎ≤ÑÍ∞Ä Ïã§Ìñâ Ï§ëÏù∏ÏßÄ ÌôïÏù∏
axios.get('http://localhost:3010')
  .then(() => {
    console.log('Server is running on port 3010\n');
    testGoogleSheetsSave();
  })
  .catch(() => {
    console.error('‚ùå Server is not running on port 3010');
    console.log('Please run: PORT=3010 npm run dev');
  });